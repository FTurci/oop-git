{"title":"Software Engineering and Object Oriented Programming","markdown":{"headingText":"Software Engineering and Object Oriented Programming","containsRefs":false,"markdown":"\n\nWelcome to the **Software Engineering and Object Oriented Programming** part of the *SCIF20002 Programming and Data Analysis for Scientists* course.\n\n<!-- All the course material will be available from this website. -->\n\nThis  part of the course focuses on developing your software engineering skills and your knowledge of object-oriented programming through the achievement of a **practical simulation project**. Over the course of five sessions, you will acquire the tools and explore the instruments to:\n\n\n::: {.callout-tip appearance=\"minimal\"}\n- **Create** your own `git` repository locally and synchronise it on `Github`\n- **Learn** to track changes, construct commits and collaborate with others\n- **Write** an object-oriented code in C++ and Python\n- **Write** Python wrapper code to interface with C++ using `pybind`\n\n:::\n## Requirements\n\n\n### Knowledge base\n\nYou will need:\n\n- consolidated knowledge of how to interact with a Unix shell\n- consolidated knowledge of Python\n- consolidated knowledge of basic C++ syntax\n- initial knowledge of classes in C++\n- knowledge of the C++ compilation process\n\n### Software\n\nYou will need access to a complete environment with \n\n- a Unix shell (e.g. a Terminal)\n- a C++ compiler (`gcc/g++`)\n- an installation of `git`\n- a Python environment\n- suitable editor (e.g. VSCode). \n\nThe **Noteable** environment accessible from *Blackboard* provides all of these.\n\nHowever, you are **encouraged** to have your own software development environment installed **locally** on your machines.\n\nHere are some architecture-dependent recommendations:\n\n::: {.panel-tabset }\n\n### Windows 11\n\n**Shell**\n \nThe recommended way to do software development on Windows is to install the **Windows Linux Subsystem** (WSL, version 2). This installs a well-integrated local Linux distribution. [↗](https://learn.microsoft.com/en-us/windows/wsl/install).\n\nIn brief, you will need to open the **Windows Command Prompt** in administrator mode  by right-clicking and selecting *Run as administrator* and then type the single command\n\n```PowerShell\nwsl --install\n```\nRestart the machine and then launch WSL.\n\n**C++ compiler**\n\nFrom the WSL shell, install the C/C++ compiler with\n\n```bash\nsudo apt install gcc\n```\nYou will be prompted to enter the password that you will have set for your WSL user.\n\n\n**Git**\n\nThe version control software `git` is installed with\n\n```bash\nsudo apt-get install git\n```\n\nTo interact with Github, it is recommended to also install the Github command-line utility `gh`. To do so, first add the official sources (copy and paste command)\n\n```bash\n(type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \\\n\t&& sudo mkdir -p -m 755 /etc/apt/keyrings \\\n        && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \\\n        && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \\\n\t&& sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \\\n\t&& echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n\t&& sudo apt update \\\n\t&& sudo apt install gh -y\n```\n\nThen update the pakcage list and install `gh`\n\n```bash\nsudo apt update\nsudo apt install gh\n```\n\n**Python environment**\n\nA basic working environment in Python is installed from the WSL shell via \n\n```bash\nsudo apt install python3 python3-pip ipython3\n```\nYou can then install scientific computing packages via `pip`\n\n```bash\npip install numpy matplotlib scipy\n```\n\n**Code editor**\n\nThe simplest option is to install **Visual Studio Code** and configure it to work with WSL.\n\nHere is the offical guidance [↗️](https://code.visualstudio.com/docs/remote/wsl)\n\n### MacOS \n\n**Shell**\n\nThe Mac already has a proper shell, called `Terminal`.\n\nIt is useful however to install a **package manager** that simplifies the installation of software. The most suitable is [`homebrew`](https://brew.sh){target=\"_blank\"}.\n\nTo install it, open a `Terminal` and type (you can copy and paste the command below)\n\n```bash\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\n**C++**\n\nThe Mac already comes with a good compiler installed called `clang`, with aliases for commands such as `gcc\n and `g++`. \n\n You may want to install a GNU compiler ( the standard `gcc` compiler that you have, for example, on the bristol High Performance Computing clusters) you can install it with `homebrew` using:\n\n ```bash\nbrew install gcc\n ```\n\n This will install the latest version of `gcc`, which you will access with the command `gcc-xx` wher xx is the version number. For example `gcc-14`.\n\n**Git**\n\nThe Mac should have `git` pre-installed.\n\nTo interact with Github, it is recommended to also install the Github command-line utility `gh` via\n\n```bash\nbrew install gh\n```\n\n**Python**\n\nThe Mac already has Python installed as well. You can use it and readily use `pip` to install the packages that you need using \n\n```bash\npip3 install numpy matplotlib scipy\n```\n\nHowever, a more flexible way to manage different version of Python and Python environments is to install `pyenv`.  More information here [↗️](https://github.com/pyenv/pyenv?tab=readme-ov-file#unixmacos){target=\"_blank\"}\n\n**Code editor**\n\nYou can install whatever editor you prefer. A simple option is **Visual Studio Code**, which you can download from this link [↗️](https://code.visualstudio.com){target=\"_blank\"}\n\nAtelemetry-free version of VSCode can be installed via `homewbrew`\n\n```bash\nbrew install --cask vscodium\n```\n\n\n### Linux  {#tab-linux}\n\nDepending on the linux distribution, you may have different package managers to install software. Here we assume a Debian-based distribution such as **Ubuntu**, where the package manager is `apt` (or `apt-get`).\n\n**Shell**\n\nAll Linux distributions have an application to launch a shell, often called `Terminal`.\n\n**C++**\n\nThe C/C++ compilers are normally already installed. If not, just type\n\n```bash\nsudo apt-get install gcc\n```\n\n**Git**\n\n`git` is  normally available. If not, just type\n\n```bash\nsudo apt-get install git\n```\nTo interact with Github, it is recommended to also install the Github command-line utility `gh`. To do so, first add the official sources (copy and paste command)\n\n```bash\n(type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \\\n\t&& sudo mkdir -p -m 755 /etc/apt/keyrings \\\n        && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \\\n        && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \\\n\t&& sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \\\n\t&& echo \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \\\n\t&& sudo apt update \\\n\t&& sudo apt install gh -y\n```\n\nThen update the pakcage list and install `gh`\n\n```bash\nsudo apt update\nsudo apt install gh\n```\n**Python**\n\nYou install Python via\n\n```bash\nsudo apt-get install python3 python3-pip ipython3\n```\nYou can then install scientific computing packages via `pip`\n\n```bash\npip install numpy matplotlib scipy\n```\n\n**Code editor**\n\nYou can install whatever editor you prefer, including VSCode [↗️](https://code.visualstudio.com){target=\"_blank\"}.\n\nOn `Ubuntu`, a telemetry-free version of VSCode can be installed via `snaps`\n\n```bash\nsnap install codium --classic\n```\n\n### ChromeOS\n\nChromebooks have a Linux operating system running under the hood. \n\nIt is possible to access it by activating the **Linux development environment**, see the documentation [↗️](https://support.google.com/chromebook/answer/9145439){target=\"_blank\"}\n\nYou can then follow the same instructions as **Linux** users.\n\n:::\n\n\n\n\n\n<!-- See figure [See the image](about.qmd#fig-something) -->","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.45","theme":"cosmo","grid":{"sidebar-width":"305px"},"number-chapters":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}